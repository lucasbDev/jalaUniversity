"""  Scrabble √© um jogo onde os jogadores marcam pontos soletrando palavras. 
     As palavras s√£o pontuadas adicionando os valores de pontos de cada letra individual.
     Complete o m√©todo dentro da classe Game que, dada uma palavra, retorna a pontua√ß√£o total 
     da palavra com base na seguinte divis√£o de pontos:"""


class Game:
    
    def __init__(self):
        self.scores = {"a": 1, "c": 3, "b": 3, "e": 1, "d": 2, "g": 2,
                       "f": 4, "i": 1, "h": 4, "k": 5, "j": 8, "m": 3,
                       "l": 1, "o": 1, "n": 1, "q": 10, "p": 3, "s": 1,
                       "r": 1, "u": 1, "t": 1, "w": 4, "v": 4, "y": 4,
                       "x": 8, "z": 10}
        
    def get_score(self, word):
        score = 0
        for letter in word.lower(): 
            if letter in self.scores:
                score += self.scores[letter]
        return score

game = Game()

score = game.get_score("Hello")

print(score)




""" A seguir apresentamos uma lista de n√∫meros que representam os saldos de v√°rias contas
 banc√°rias, o problema √© que para mostr√°-los ao cliente, precisamos que sejam mostrados em 
 porcentagem. Converta todos os n√∫meros em porcentagem e imprima a nova lista."""

accounts = [0.12, 0.90, 0.89, 0.076, -0.87, 0.78, 0.65]
percentage_accounts = []

for account in accounts:
  percentage = account * 100
  percentage_accounts.append(percentage)

print(percentage_accounts)






""" H√° uma string ùë† de comprimento 3, composta por letras mai√∫sculas e min√∫sculas.
    Verifique se √© igual a "SIM" (sem aspas), onde cada letra pode ser em qualquer caso.
    Por exemplo, "YES", "yEs", "Yes" s√£o todos permitidos.
    Imprima "SIM" se a condi√ß√£o for satisfeita, caso contr√°rio, imprima "N√ÉO"""

s = input("Digite algo: ") 
s = s.upper() 

# Verifica se a string √© igual a "SIM" em letras mai√∫sculas
if s == "SIM":
    print("SIM")
else:
    print("N√ÉO")


"""At√© este ponto voc√™ j√° conhece muito bem a fun√ß√£o print(). √â algo muito divertido que podemos fazer em python e desenhar padr√µes. Desenhe o seguinte padr√£o e lembre-se que a solu√ß√£o deve incluir os loops que voc√™ aprendeu.

* 
* * 
* * * 
* * * * 
* * * * * 
* * * * 
* * * 
* * 
*

"""

# coloque o seu c√≥digo aqui

for i in range(1, 6):
    print("* " * i)

for i in range(4, 0, -1):
    print("* " * i)


""" Estamos testando um novo sistema de verifica√ß√£o de seguran√ßa, para o qual o usu√°rio
    deve digitar sua senha e digitar um c√≥digo de verifica√ß√£o, para o qual ele tem 3 tentativas,
    se falhar nas tr√™s tentativas, devemos imprimir Sua conta foi bloqueada, em caso voc√™ insira
    os dados corretos nas tr√™s tentativas que tiver, imprimiremos Seus dados foram verificados,
    use a fun√ß√£o de entrada para que o usu√°rio insira sua senha e seu c√≥digo de verifica√ß√£o"""

password = "!@123"
verification_code = "9898"
tentativas = 0

while tentativas < 3:
    psw = input("Digite a sua senha: ")
    vr_code = input("Digite o c√≥digo de verifica√ß√£o: ")
    if psw == password and vr_code == verification_code:
        print("Seus dados foram verificados!")
        break
    else:
        tentativas += 1
        if tentativas == 3:
            print("Sua conta foi bloqueada!")
        else:
            print("Senha ou c√≥digo de verifica√ß√£o incorretos. Tentativas restantes:", 3 - tentativas)

